{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/Spinner.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","category","console","log","type","placeholder","value","onChange","target","getGifs","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","Spinner","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","gif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8MAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAiB1C,OACC,sBAAMC,UAAU,MAAMC,SAXF,SAACC,GACrBA,EAAEC,iBACwB,KAAtBL,EAAWM,QACdR,GAAc,SAACS,GAAD,OAAeP,GAAf,mBAA8BO,OAC5CN,EAAc,KAEdO,QAAQC,IAAI,mCAKb,SACC,uBACCC,KAAK,OACLR,UAAU,aACVS,YAAY,gBACZC,MAAOZ,EACPa,SArBuB,SAACT,GAC1BH,EAAcG,EAAEU,OAAOF,a,uBCPZG,EAAO,uCAAG,WAAOR,GAAP,uBAAAS,EAAA,6DAChBC,EADgB,iDACgCC,UACrDX,GAFqB,+DAICY,MAAMF,GAJP,cAIhBG,EAJgB,gBAKCA,EAASC,OALV,uBAKdC,EALc,EAKdA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVd,kBAcfM,GAde,4CAAH,sDCULO,EARK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACC,wBAAQf,UAAU,yDAAlB,SACC,qBAAK6B,IAAKd,EAAKe,IAAKL,EAAOA,MAAOA,OCQtBM,G,MATC,WACf,OACC,sBAAK/B,UAAU,aAAf,UACC,wBACA,6BCkBYgC,EApBC,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SAAe,ECHN,SAACA,GAAc,IAAD,EACfR,mBAAS,CAClCuB,KAAM,GACNa,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAUzC,OAJAC,qBAAU,WACTvB,EAAQR,GAAUgC,MAAK,SAAChB,GAAD,OAAUc,EAAS,CAAEf,KAAMC,EAAMY,SAAS,SAC/D,CAAC5B,IAEG6B,EDNmBI,CAAajC,GAA/Be,EADyB,EACzBA,KAAMa,EADmB,EACnBA,QAEd,OACC,0BAASjC,UAAU,MAAnB,UACC,oBAAIA,UAAU,+CAAd,SACEK,IAGD4B,GAAW,cAAC,EAAD,IAEZ,qBAAKjC,UAAU,cAAf,SACEoB,EAAKE,KAAI,SAACiB,GAAD,OACT,cAAC,EAAD,CAA0Bd,MAAOc,EAAId,MAAOV,IAAKwB,EAAIxB,KAAnCwB,EAAIf,aEMZgB,EArBM,WAAM,MAEU3C,mBAAS,CAAC,kBAFpB,mBAEnB4C,EAFmB,KAEP7C,EAFO,KAI1B,OACC,qCACC,yBAAQI,UAAU,SAAlB,UACC,oBAAIA,UAAU,QAAd,sBAEA,cAAC,EAAD,CAAaJ,cAAeA,OAG7B,yBAASI,UAAU,OAAnB,SACEyC,EAAWnB,KAAI,SAACjB,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCbnBqC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.0a6558c0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value)\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (inputValue.trim() !== '') {\r\n\t\t\tsetCategories((category) => [inputValue, ...category])\r\n\t\t\tsetInputValue('')\r\n\t\t} else {\r\n\t\t\tconsole.log('Debe de escribir una categoria')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className='add' onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tclassName='add__input'\r\n\t\t\t\tplaceholder='Category Name'\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n\t\tcategory\r\n\t)}&limit=10&api_key=ITl4O2sv4FfhsMKUR5FDEM49zzljYDcv`\r\n\tconst response = await fetch(url)\r\n\tconst { data } = await response.json()\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t}\r\n\t})\r\n\r\n\treturn gifs\r\n}\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\treturn (\r\n\t\t<figure className='gif__images--gif animate__animated animate__fadeInLeft'>\r\n\t\t\t<img src={url} alt={title} title={title} />\r\n\t\t</figure>\r\n\t)\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\n\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n\treturn (\r\n\t\t<div className='lds-ripple'>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport GifGridItem from './GifGridItem'\r\nimport Spinner from './Spinner'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data, loading } = useFetchGifs(category)\r\n\r\n\treturn (\r\n\t\t<article className='gif'>\r\n\t\t\t<h3 className='gif__title animate__animated animate__rollIn'>\r\n\t\t\t\t{category}\r\n\t\t\t</h3>\r\n\r\n\t\t\t{loading && <Spinner />}\r\n\r\n\t\t\t<div className='gif__images'>\r\n\t\t\t\t{data.map((gif) => (\r\n\t\t\t\t\t<GifGridItem key={gif.id} title={gif.title} url={gif.url} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t)\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((gifs) => setState({ data: gifs, loading: false }))\r\n\t}, [category])\r\n\r\n\treturn state\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\t//const categories = ['One Piece', 'One Punch', 'Samurai X']\r\n\tconst [categories, setCategories] = useState(['HunterXHunter'])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className='header'>\r\n\t\t\t\t<h1 className='title'>GiffyApp</h1>\r\n\r\n\t\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t</header>\r\n\r\n\t\t\t<section className='gifs'>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</section>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GifExpertApp from './GifExpertApp'\nimport './index.css'\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'))\n"],"sourceRoot":""}